#= 
    This code was generated by heta-compiler 
=#
function get_MTKmodel()
  
  @variables t
  __ruleVariables__ = @variables comp4(t) s1(t) s2(t) s3(t) s4(t) s5(t) r1(t) r2(t) r3(t) p1(t) s6(t) s7(t) s8(t) s9(t) s10(t) r4(t) r5(t) s11(t) s12(t) r6(t)
  __dynamicVariables__ = @variables comp3(t) _s1_(t) _s2_(t) _s6_(t) _s7_(t) _s8_(t) _s12_(t)
  
  ### Define potential algebraic variables
  
  ### Define parameters (constants and statics)
  __constParameters__ = @parameters k1 k2 k3 k4 k5 k6 s11_0 s12_0 k7
  __staticParameters__ = @parameters comp1 comp2 _s3_ _s4_ _s9_ _s11_
  
  ### Define an operator for the differentiation w.r.t. time
  __D__ = Differential(t)
  
  ### ODE Equations ###
  __eqs__ = [
    # extended rules
    comp4 ~ 4e+0,
    s1 ~ _s1_/ comp1,
    s2 ~ _s2_/ comp1,
    s3 ~ _s3_/ comp2,
    s4 ~ _s4_/ comp2,
    s5 ~ 0e+0,
    r1 ~ k1 * s1 * comp1,
    r2 ~ k2 * s3 * comp2,
    r3 ~ k3 * s2 * comp1,
    p1 ~ k4 * comp3,
    s6 ~ _s6_,
    s7 ~ _s7_/ comp1,
    s8 ~ _s8_,
    s9 ~ _s9_,
    s10 ~ 0e+0,
    r4 ~ k5 * s6,
    r5 ~ k6 * s9,
    s11 ~ _s11_/ comp1,
    s12 ~ _s12_/ comp1,
    r6 ~ k7 * s11 * comp1,
  
    # ODEs
    __D__(comp3) ~ -p1, # dcomp3/dt
    __D__(_s1_) ~ -r1, # ds1/dt
    __D__(_s2_) ~ 2*r1-r3, # ds2/dt
    __D__(_s6_) ~ -r4, # ds6/dt
    __D__(_s7_) ~ r4, # ds7/dt
    __D__(_s8_) ~ r4, # ds8/dt
    __D__(_s12_) ~ r6, # ds12/dt
  ]
  
  ### Continious events ###
  
  ### Discrete events ###
  
  ### Initialization ###
  
  __constValues__ = [
    k1 => 0.1,
    k2 => 0.2,
    k3 => 0.3,
    k4 => 0.4,
    k5 => 0.5,
    k6 => 0.6,
    s11_0 => 10,
    s12_0 => 1,
    k7 => 0.001,
  ]
  
  __init__ = [
    comp1 => 1e+0,
    comp2 => 2.1,
    comp3 => 3e+0,
    comp4 => 4e+0,
    s1 => 1e+1,
    s2 => 0e+0,
    s3 => 1e+1,
    s4 => 1.1,
    s5 => 0e+0,
    r1 => k1 * s1 * comp1,
    r2 => k2 * s3 * comp2,
    r3 => k3 * s2 * comp1,
    p1 => k4 * comp3,
    s6 => 1e+1,
    s7 => 0e+0,
    s8 => 0e+0,
    s9 => 1e+0,
    s10 => 0e+0,
    r4 => k5 * s6,
    r5 => k6 * s9,
    s11 => s11_0,
    s12 => s12_0,
    r6 => k7 * s11 * comp1,
  ]
  
  __amountsInit__ = [
      _s1_ => s1 * comp1,
      _s2_ => s2 * comp1,
      _s3_ => s3 * comp2,
      _s4_ => s4 * comp2,
      _s6_ => s6,
      _s7_ => s7 * comp1,
      _s8_ => s8,
      _s9_ => s9,
      _s11_ => s11 * comp1,
      _s12_ => s12 * comp1,
  ]
  
  ### ODESystem definition ###
  __sys__ = ODESystem(__eqs__, t, [__dynamicVariables__; __ruleVariables__], [__constParameters__; __staticParameters__],
    name = :nameless,
    discrete_events = [],
    defaults = [__constValues__; __init__; __amountsInit__]
  )
  
  return structural_simplify(__sys__), __amountsInit__, __constValues__
end

__model__ = get_MTKmodel()