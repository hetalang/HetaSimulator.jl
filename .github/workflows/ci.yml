name: CI
on:
  pull_request:
  push:
    branches:
      - master
      - '*'
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}

    continue-on-error: ${{ matrix.allow_failure || false }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {version: '1.9',  os: windows-latest, arch: x64}
          - {version: '1.9',  os: ubuntu-latest,  arch: x64}
          - {version: '1.9',  os: macos-latest,   arch: aarch64}
          - {version: 'lts', os: windows-latest, arch: x64}
          - {version: 'lts', os: ubuntu-latest,  arch: x64}
          - {version: 'lts', os: macos-latest,   arch: aarch64}
          - {version: '1', os: windows-latest, arch: x64}
          - {version: '1', os: ubuntu-latest,  arch: x64}
          - {version: '1', os: macos-latest,   arch: aarch64}
          # exotic architectures
          - {version: 'lts', os: ubuntu-22.04-arm, arch: aarch64, allow_failure: true}
          - {version: 'lts', os: macos-13, arch: x64}
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
          fail-on-error: false